# Generated by Django 5.0.14 on 2025-08-28 19:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ItemCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Item categories",
                "db_table": "item_categories",
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("item_id", models.IntegerField(db_index=True, unique=True)),
                ("name", models.CharField(db_index=True, max_length=255)),
                ("examine", models.TextField(blank=True, null=True)),
                ("icon", models.CharField(blank=True, max_length=255, null=True)),
                ("value", models.IntegerField(help_text="Item's base value in GP")),
                ("high_alch", models.IntegerField(help_text="High alch value in GP")),
                (
                    "low_alch",
                    models.IntegerField(default=0, help_text="Low alch value in GP"),
                ),
                ("limit", models.IntegerField(default=0, help_text="GE buy limit")),
                (
                    "members",
                    models.BooleanField(default=False, help_text="Members only item"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Item is actively traded"
                    ),
                ),
            ],
            options={
                "db_table": "items",
                "indexes": [
                    models.Index(fields=["item_id"], name="items_item_id_fd0e3d_idx"),
                    models.Index(fields=["name"], name="items_name_dd4454_idx"),
                    models.Index(fields=["high_alch"], name="items_high_al_c740ec_idx"),
                    models.Index(fields=["members"], name="items_members_2922a5_idx"),
                    models.Index(fields=["is_active"], name="items_is_acti_0dc7a3_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="ItemCategoryMapping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "confidence",
                    models.FloatField(
                        default=1.0, help_text="AI confidence in categorization (0-1)"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="items.itemcategory",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="categories",
                        to="items.item",
                    ),
                ),
            ],
            options={
                "db_table": "item_category_mappings",
                "unique_together": {("item", "category")},
            },
        ),
    ]
