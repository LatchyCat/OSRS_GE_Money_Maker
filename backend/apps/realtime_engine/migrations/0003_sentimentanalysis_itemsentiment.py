# Generated by Django 5.2.5 on 2025-09-04 15:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("items", "0001_initial"),
        ("realtime_engine", "0002_gelimitentry"),
    ]

    operations = [
        migrations.CreateModel(
            name="SentimentAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("official_news", "Official OSRS News"),
                            ("official_updates", "Official Updates"),
                            ("reddit", "Reddit r/2007scape"),
                            ("twitter", "Twitter"),
                            ("discord", "Discord Communities"),
                            ("combined", "Combined Analysis"),
                        ],
                        max_length=50,
                    ),
                ),
                ("analysis_timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "overall_sentiment",
                    models.CharField(
                        choices=[
                            ("positive", "Positive"),
                            ("negative", "Negative"),
                            ("neutral", "Neutral"),
                        ],
                        default="neutral",
                        max_length=20,
                    ),
                ),
                (
                    "sentiment_score",
                    models.FloatField(
                        default=0.0, help_text="Compound sentiment score (-1 to 1)"
                    ),
                ),
                (
                    "confidence",
                    models.FloatField(
                        default=0.0, help_text="Analysis confidence (0 to 1)"
                    ),
                ),
                (
                    "analyzed_articles",
                    models.IntegerField(
                        default=0, help_text="Number of articles analyzed"
                    ),
                ),
                (
                    "key_themes",
                    models.JSONField(
                        default=list, help_text="Extracted key themes and topics"
                    ),
                ),
                (
                    "sentiment_breakdown",
                    models.JSONField(
                        default=dict, help_text="Positive/negative/neutral counts"
                    ),
                ),
                (
                    "market_impact_predictions",
                    models.JSONField(
                        default=dict, help_text="Predicted market impacts"
                    ),
                ),
                (
                    "category_sentiment",
                    models.JSONField(
                        default=dict, help_text="Sentiment by item category"
                    ),
                ),
                (
                    "top_mentioned_items",
                    models.JSONField(default=dict, help_text="Most mentioned items"),
                ),
                ("analysis_duration_seconds", models.FloatField(default=0.0)),
                (
                    "data_quality_score",
                    models.FloatField(
                        default=0.0, help_text="Quality of source data (0-100)"
                    ),
                ),
            ],
            options={
                "db_table": "sentiment_analysis",
                "ordering": ["-analysis_timestamp"],
                "indexes": [
                    models.Index(
                        fields=["-analysis_timestamp"],
                        name="sentiment_a_analysi_f1bbb5_idx",
                    ),
                    models.Index(
                        fields=["source", "-analysis_timestamp"],
                        name="sentiment_a_source_789b9c_idx",
                    ),
                    models.Index(
                        fields=["overall_sentiment"],
                        name="sentiment_a_overall_f1d371_idx",
                    ),
                    models.Index(
                        fields=["-sentiment_score"],
                        name="sentiment_a_sentime_829392_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ItemSentiment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("analysis_timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "sentiment_score",
                    models.FloatField(
                        default=0.0, help_text="Item-specific sentiment (-1 to 1)"
                    ),
                ),
                ("sentiment_label", models.CharField(default="neutral", max_length=20)),
                (
                    "mention_count",
                    models.IntegerField(
                        default=0, help_text="Number of mentions found"
                    ),
                ),
                (
                    "confidence",
                    models.FloatField(
                        default=0.0, help_text="Analysis confidence (0 to 1)"
                    ),
                ),
                (
                    "sample_contexts",
                    models.JSONField(
                        default=list, help_text="Sample sentences mentioning the item"
                    ),
                ),
                (
                    "predicted_impact",
                    models.CharField(
                        choices=[
                            ("no_impact", "No Impact"),
                            ("minimal_impact", "Minimal Impact"),
                            ("positive_impact", "Positive Impact"),
                            ("negative_impact", "Negative Impact"),
                            ("strong_positive_impact", "Strong Positive Impact"),
                            ("strong_negative_impact", "Strong Negative Impact"),
                            ("moderate_impact", "Moderate Impact"),
                        ],
                        default="no_impact",
                        max_length=30,
                    ),
                ),
                (
                    "sources",
                    models.JSONField(
                        default=list, help_text="Sources where item was mentioned"
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sentiment_history",
                        to="items.item",
                    ),
                ),
            ],
            options={
                "db_table": "item_sentiment",
                "ordering": ["-analysis_timestamp"],
                "indexes": [
                    models.Index(
                        fields=["item", "-analysis_timestamp"],
                        name="item_sentim_item_id_49b64e_idx",
                    ),
                    models.Index(
                        fields=["-sentiment_score"],
                        name="item_sentim_sentime_216be0_idx",
                    ),
                    models.Index(
                        fields=["predicted_impact"],
                        name="item_sentim_predict_5993db_idx",
                    ),
                    models.Index(
                        fields=["-mention_count"], name="item_sentim_mention_f1863e_idx"
                    ),
                ],
            },
        ),
    ]
