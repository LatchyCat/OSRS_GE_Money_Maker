# Generated by Django 5.0.14 on 2025-08-28 19:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("items", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AIPromptLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "prompt_type",
                    models.CharField(help_text="Type of AI operation", max_length=50),
                ),
                ("prompt_text", models.TextField(help_text="Full prompt sent to AI")),
                ("response_text", models.TextField(help_text="AI response")),
                ("tokens_used", models.IntegerField(default=0)),
                (
                    "response_time_ms",
                    models.IntegerField(help_text="Response time in milliseconds"),
                ),
                (
                    "user_query",
                    models.TextField(
                        blank=True, help_text="Original user query if applicable"
                    ),
                ),
                ("success", models.BooleanField(default=True)),
                ("error_message", models.TextField(blank=True)),
                ("api_provider", models.CharField(default="openrouter", max_length=50)),
                ("model_name", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("related_items", models.ManyToManyField(blank=True, to="items.item")),
            ],
            options={
                "db_table": "ai_prompt_logs",
                "indexes": [
                    models.Index(
                        fields=["-created_at"], name="ai_prompt_l_created_4653dd_idx"
                    ),
                    models.Index(
                        fields=["prompt_type"], name="ai_prompt_l_prompt__bfbe74_idx"
                    ),
                    models.Index(
                        fields=["success"], name="ai_prompt_l_success_5ad0e3_idx"
                    ),
                    models.Index(
                        fields=["api_provider", "model_name"],
                        name="ai_prompt_l_api_pro_027f23_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AIRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recommendation_type",
                    models.CharField(
                        choices=[
                            ("high_profit", "High Profit"),
                            ("stable_market", "Stable Market"),
                            ("trending_up", "Trending Up"),
                            ("bulk_opportunity", "Bulk Opportunity"),
                            ("quick_flip", "Quick Flip"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        help_text="AI confidence in recommendation (0-1)"
                    ),
                ),
                (
                    "reasoning",
                    models.TextField(
                        help_text="AI-generated explanation for recommendation"
                    ),
                ),
                (
                    "predicted_profit",
                    models.IntegerField(help_text="AI-predicted profit per item"),
                ),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Low Risk"),
                            ("medium", "Medium Risk"),
                            ("high", "High Risk"),
                        ],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "expires_at",
                    models.DateTimeField(help_text="When this recommendation expires"),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_recommendations",
                        to="items.item",
                    ),
                ),
            ],
            options={
                "db_table": "ai_recommendations",
                "indexes": [
                    models.Index(
                        fields=["item", "-confidence_score"],
                        name="ai_recommen_item_id_faa75a_idx",
                    ),
                    models.Index(
                        fields=["-created_at"], name="ai_recommen_created_d7cebf_idx"
                    ),
                    models.Index(
                        fields=["expires_at"], name="ai_recommen_expires_fc7b49_idx"
                    ),
                    models.Index(
                        fields=["is_active", "recommendation_type"],
                        name="ai_recommen_is_acti_1a459f_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="MarketAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "analysis_type",
                    models.CharField(
                        choices=[
                            ("daily_summary", "Daily Market Summary"),
                            ("item_trend", "Item Trend Analysis"),
                            ("profit_forecast", "Profit Forecast"),
                            ("market_shift", "Market Shift Detection"),
                        ],
                        max_length=50,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("summary", models.TextField(help_text="Brief summary of analysis")),
                (
                    "detailed_analysis",
                    models.TextField(help_text="Detailed AI analysis"),
                ),
                (
                    "insights",
                    models.JSONField(
                        default=dict, help_text="Structured insights from analysis"
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(help_text="Confidence in analysis (0-1)"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("created_by", models.CharField(default="ai_system", max_length=100)),
                (
                    "items",
                    models.ManyToManyField(
                        blank=True, related_name="market_analyses", to="items.item"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Market analyses",
                "db_table": "market_analyses",
                "indexes": [
                    models.Index(
                        fields=["-created_at"], name="market_anal_created_c5070b_idx"
                    ),
                    models.Index(
                        fields=["analysis_type"], name="market_anal_analysi_8fd0cb_idx"
                    ),
                    models.Index(
                        fields=["-confidence_score"],
                        name="market_anal_confide_674396_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="UserPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_key",
                    models.CharField(
                        help_text="Session key for anonymous users",
                        max_length=40,
                        unique=True,
                    ),
                ),
                (
                    "preferred_profit_range",
                    models.JSONField(
                        default=dict, help_text="Min/max profit preferences"
                    ),
                ),
                (
                    "risk_tolerance",
                    models.CharField(
                        choices=[
                            ("conservative", "Conservative"),
                            ("moderate", "Moderate"),
                            ("aggressive", "Aggressive"),
                        ],
                        default="moderate",
                        max_length=20,
                    ),
                ),
                (
                    "search_history",
                    models.JSONField(default=list, help_text="Recent search queries"),
                ),
                (
                    "members_only",
                    models.BooleanField(default=True, help_text="Show members items"),
                ),
                (
                    "show_explanations",
                    models.BooleanField(default=True, help_text="Show AI explanations"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "clicked_items",
                    models.ManyToManyField(
                        blank=True, related_name="clicked_by", to="items.item"
                    ),
                ),
                (
                    "preferred_categories",
                    models.ManyToManyField(blank=True, to="items.itemcategory"),
                ),
            ],
            options={
                "db_table": "user_preferences",
                "indexes": [
                    models.Index(
                        fields=["session_key"], name="user_prefer_session_77b5d1_idx"
                    ),
                    models.Index(
                        fields=["-updated_at"], name="user_prefer_updated_9939e7_idx"
                    ),
                ],
            },
        ),
    ]
