# Generated by Django 5.0.14 on 2025-08-28 19:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("items", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="WebSocketConnection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("channel_name", models.CharField(max_length=255, unique=True)),
                (
                    "connection_type",
                    models.CharField(
                        choices=[
                            ("price_updates", "Price Updates"),
                            ("recommendations", "AI Recommendations"),
                            ("general", "General Updates"),
                        ],
                        default="price_updates",
                        max_length=50,
                    ),
                ),
                ("connected_at", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                (
                    "session_key",
                    models.CharField(
                        blank=True, help_text="Session key if available", max_length=40
                    ),
                ),
                ("user_agent", models.TextField(blank=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                (
                    "subscribed_items",
                    models.JSONField(
                        default=list,
                        help_text="List of item IDs to receive updates for",
                    ),
                ),
                (
                    "min_profit_threshold",
                    models.IntegerField(
                        default=0, help_text="Minimum profit to send updates"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "websocket_connections",
                "indexes": [
                    models.Index(
                        fields=["is_active", "connection_type"],
                        name="websocket_c_is_acti_e45594_idx",
                    ),
                    models.Index(
                        fields=["-last_activity"], name="websocket_c_last_ac_bef441_idx"
                    ),
                    models.Index(
                        fields=["session_key"], name="websocket_c_session_f34acc_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PriceAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_key", models.CharField(db_index=True, max_length=40)),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("price_below", "Price drops below threshold"),
                            ("price_above", "Price rises above threshold"),
                            ("profit_above", "Profit exceeds threshold"),
                            ("volume_spike", "Trading volume spike"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "threshold_value",
                    models.IntegerField(help_text="Threshold value in GP"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("triggered_count", models.IntegerField(default=0)),
                ("last_triggered", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_alerts",
                        to="items.item",
                    ),
                ),
            ],
            options={
                "db_table": "price_alerts",
                "indexes": [
                    models.Index(
                        fields=["session_key", "is_active"],
                        name="price_alert_session_484f9e_idx",
                    ),
                    models.Index(
                        fields=["item", "alert_type"],
                        name="price_alert_item_id_58d0a7_idx",
                    ),
                    models.Index(
                        fields=["-created_at"], name="price_alert_created_92c2da_idx"
                    ),
                ],
            },
        ),
    ]
