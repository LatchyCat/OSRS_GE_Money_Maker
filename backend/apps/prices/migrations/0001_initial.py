# Generated by Django 5.0.14 on 2025-08-28 19:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("items", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PriceAggregate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "interval",
                    models.CharField(
                        choices=[
                            ("5m", "5 minutes"),
                            ("1h", "1 hour"),
                            ("6h", "6 hours"),
                            ("24h", "24 hours"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(help_text="Start of the time period"),
                ),
                ("avg_high_price", models.IntegerField(blank=True, null=True)),
                ("high_price_volume", models.IntegerField(default=0)),
                ("avg_low_price", models.IntegerField(blank=True, null=True)),
                ("low_price_volume", models.IntegerField(default=0)),
                (
                    "avg_profit",
                    models.IntegerField(
                        blank=True, help_text="Average profit from high alch", null=True
                    ),
                ),
                (
                    "avg_profit_margin",
                    models.FloatField(
                        blank=True, help_text="Average profit margin %", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_aggregates",
                        to="items.item",
                    ),
                ),
            ],
            options={
                "db_table": "price_aggregates",
                "indexes": [
                    models.Index(
                        fields=["item", "interval", "-timestamp"],
                        name="price_aggre_item_id_6d41fa_idx",
                    ),
                    models.Index(
                        fields=["timestamp"], name="price_aggre_timesta_296c05_idx"
                    ),
                    models.Index(
                        fields=["avg_profit"], name="price_aggre_avg_pro_b2b4a3_idx"
                    ),
                ],
                "unique_together": {("item", "interval", "timestamp")},
            },
        ),
        migrations.CreateModel(
            name="PriceSnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "high_price",
                    models.IntegerField(
                        blank=True, help_text="Instant buy price", null=True
                    ),
                ),
                (
                    "high_time",
                    models.DateTimeField(
                        blank=True, help_text="When high price was recorded", null=True
                    ),
                ),
                (
                    "low_price",
                    models.IntegerField(
                        blank=True, help_text="Instant sell price", null=True
                    ),
                ),
                (
                    "low_time",
                    models.DateTimeField(
                        blank=True, help_text="When low price was recorded", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "api_source",
                    models.CharField(
                        default="runescape_wiki", help_text="API source", max_length=50
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_snapshots",
                        to="items.item",
                    ),
                ),
            ],
            options={
                "db_table": "price_snapshots",
                "indexes": [
                    models.Index(
                        fields=["item", "-created_at"],
                        name="price_snaps_item_id_8cdff8_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="price_snaps_created_05f8ac_idx"
                    ),
                    models.Index(
                        fields=["high_price"], name="price_snaps_high_pr_74a607_idx"
                    ),
                    models.Index(
                        fields=["low_price"], name="price_snaps_low_pri_c6cb59_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ProfitCalculation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("current_buy_price", models.IntegerField(blank=True, null=True)),
                ("current_sell_price", models.IntegerField(blank=True, null=True)),
                (
                    "current_profit",
                    models.IntegerField(default=0, help_text="Current profit per item"),
                ),
                (
                    "current_profit_margin",
                    models.FloatField(default=0.0, help_text="Current profit margin %"),
                ),
                (
                    "daily_volume",
                    models.IntegerField(default=0, help_text="24h trading volume"),
                ),
                (
                    "price_trend",
                    models.CharField(
                        choices=[
                            ("rising", "Rising"),
                            ("falling", "Falling"),
                            ("stable", "Stable"),
                        ],
                        default="stable",
                        max_length=20,
                    ),
                ),
                (
                    "recommendation_score",
                    models.IntegerField(
                        default=0, help_text="AI-calculated recommendation score"
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "item",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profit_calc",
                        to="items.item",
                    ),
                ),
            ],
            options={
                "db_table": "profit_calculations",
                "indexes": [
                    models.Index(
                        fields=["-current_profit"],
                        name="profit_calc_current_4d6bea_idx",
                    ),
                    models.Index(
                        fields=["-recommendation_score"],
                        name="profit_calc_recomme_fd75b5_idx",
                    ),
                    models.Index(
                        fields=["last_updated"], name="profit_calc_last_up_30f527_idx"
                    ),
                ],
            },
        ),
    ]
